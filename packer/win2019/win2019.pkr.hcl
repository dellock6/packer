
# vSphere Objects

variable "vcenter_username" {
  type    = string
  description = "The username for authenticating to vCenter."
  default = ""
  sensitive = true
}

variable "vcenter_password" {
  type    = string
  description = "The plaintext password for authenticating to vCenter."
  default = ""
  sensitive = true
}

variable "vcenter_insecure_connection" {
  type    = bool
  description = "If true, does not validate the vCenter server's TLS certificate."
  default = true
}

variable "vcenter_server" {
  type    = string
  description = "The fully qualified domain name or IP address of the vCenter Server instance."
  default = ""
}

variable "vcenter_datacenter" {
  type    = string
  description = "Required if there is more than one datacenter in vCenter."
  default = ""
}

variable "vcenter_host" {
  type = string
  description = "The ESXi host where target VM is created."
  default = ""
}

variable "vcenter_cluster" {
  type = string
  description = "The cluster where target VM is created."
  default = ""
}

variable "vcenter_datastore" {
  type    = string
  description = "Required for clusters, or if the target host has multiple datastores."
  default = ""
}

variable "vcenter_network" {
  type    = string
  description = "The network segment or port group name to which the primary virtual network adapter will be connected."
  default = ""
}

variable "vcenter_folder" {
  type    = string
  description = "The VM folder in which the VM template will be created."
  default = ""
}

# ISO Objects

variable "os_iso_path" {
  type    = string
  description = "The path of the Installation ISO file"
  default = ""
}

variable "vmtools_iso_path" {
  type = string
  description = "The path of the VMware tools ISO file"
  default = ""
}

# Virtual Machine Settings

variable "vm_name" {
  type    = string
  description = "The template vm name"
  default = ""
}

variable "vm_guest_os_type" {
  type    = string
  description = "The guest operating system type, also know as guestid."
  default = ""
}

variable "vm_version" {
  type = number
  description = "The VM virtual hardware version."
  # https://kb.vmware.com/s/article/1003746
}

variable "vm_firmware" {
  type    = string
  description = "The virtual machine firmware. (e.g. 'bios' or 'efi')"
  default = ""
}

variable "vm_cdrom_type" {
  type    = string
  description = "The virtual machine CD-ROM type."
  default = ""
}

variable "vm_cpu_sockets" {
  type = number
  description = "The number of virtual CPUs sockets."
}

variable "vm_cpu_cores" {
  type = number
  description = "The number of virtual CPUs cores per socket."
}

variable "vm_mem_size" {
  type = number
  description = "The size for the virtual memory in MB."
}

variable "vm_disk_size" {
  type = number
  description = "The size for the virtual disk in MB."
}

variable "thin_provision" {
  type = bool
  description = "Thin or Thick provisioning of the disk"
}

variable "disk_eagerly_scrub" {
  type = bool
  description = "eagerly scrub zeros"
  default = false
}

variable "vm_disk_controller_type" {
  type = list(string)
  description = "The virtual disk controller types in sequence."
}

variable "vm_network_card" {
  type = string
  description = "The virtual network card type."
  default = ""
}

variable "vm_boot_wait" {
  type = string
  description = "The time to wait before boot. "
  default = ""
}

variable "winadmin_username" {
  type = string
  description = "The username for WinRM connection."
  default = ""
}

variable "winadmin_password" {
  type = string
  description = "The password for WinRM connection."
  default = ""
}

##################################################################################
# SOURCE
##################################################################################

source "vsphere-iso" "autogenerated_1" {
  convert_to_template = true

  vm_name              = var.vm_name
  guest_os_type        = var.vm_guest_os_type
  vm_version           = var.vm_version
  firmware             = var.vm_firmware
  CPUs                 = var.vm_cpu_sockets
  cpu_cores            = var.vm_cpu_cores
  RAM                  = var.vm_mem_size
  disk_controller_type = var.vm_disk_controller_type
  storage {
    disk_size = var.vm_disk_size
    disk_controller_index = 0
    disk_thin_provisioned = var.thin_provision
    disk_eagerly_scrub = var.disk_eagerly_scrub
  }
  cdrom_type           = var.vm_cdrom_type
  iso_paths            = ["${var.os_iso_path}", "${var.vmtools_iso_path}"]
  floppy_files         = ["autounattend.xml", "scripts/install-vm-tools.ps1", "scripts/disable-network-discovery.cmd", "scripts/disable-server-manager.ps1", "scripts/enable-rdp.cmd", "scripts/enable-winrm.ps1", "scripts/set-temp.ps1"]
  network_adapters {
    network = var.vcenter_network
    network_card = var.vm_network_card
  } 
  
  shutdown_command = "shutdown /s /t 5"
  communicator         = "winrm"

  username            = var.vcenter_username
  password            = var.vcenter_password
  vcenter_server      = var.vcenter_server
  insecure_connection = var.vcenter_insecure_connection
  host                = var.vcenter_host
  cluster             = var.vcenter_cluster
  datacenter          = var.vcenter_datacenter
  datastore           = var.vcenter_datastore
  folder              = var.vcenter_folder
  winrm_username      = var.winadmin_username
  winrm_password      = var.winadmin_password
  winrm_timeout       = "1h30m"
  
}

##################################################################################
# BUILD
##################################################################################

build {
  sources = ["source.vsphere-iso.autogenerated_1"]

  provisioner "windows-shell" {
    inline = ["ipconfig /all"]
  }

}